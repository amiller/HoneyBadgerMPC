Test n = 4, t = 1, field = 73
         1739 function calls (1731 primitive calls) in 0.015 seconds

   Ordered by: cumulative time, internal time
   List reduced from 68 to 34 due to restriction <0.5>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.015    0.015 robust_reconstruction.py:15(attempt_reconstruct)
        1    0.000    0.000    0.014    0.014 wb_interpolate.py:129(decode)
        1    0.000    0.000    0.011    0.011 wb_interpolate.py:79(solveSystem)
        1    0.000    0.000    0.006    0.006 linearsolver.py:86(someSolution)
        2    0.000    0.000    0.006    0.003 polynomial.py:161(__divmod__)
        1    0.000    0.000    0.005    0.005 linearsolver.py:5(rref)
       14    0.001    0.000    0.004    0.000 linearsolver.py:37(<listcomp>)
      164    0.002    0.000    0.003    0.000 field.py:175(__mul__)
        4    0.000    0.000    0.003    0.001 polynomial.py:134(__sub__)
        8    0.000    0.000    0.002    0.000 polynomial.py:140(__add__)
        4    0.000    0.000    0.002    0.000 polynomial.py:136(__neg__)
      397    0.002    0.000    0.002    0.000 field.py:124(__init__)
        4    0.000    0.000    0.002    0.000 polynomial.py:145(__mul__)
       28    0.000    0.000    0.001    0.000 field.py:221(__div__)
       30    0.000    0.000    0.001    0.000 polynomial.py:132(__iter__)
        4    0.000    0.000    0.001    0.000 linearsolver.py:31(<listcomp>)
       79    0.001    0.000    0.001    0.000 field.py:145(__sub__)
       24    0.000    0.000    0.001    0.000 {built-in method builtins.sum}
        1    0.000    0.000    0.001    0.001 wb_interpolate.py:98(<listcomp>)
       58    0.001    0.000    0.001    0.000 field.py:129(__add__)
        4    0.000    0.000    0.001    0.000 wb_interpolate.py:91(row)
       30    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
        8    0.000    0.000    0.001    0.000 polynomial.py:141(<listcomp>)
       25    0.000    0.000    0.001    0.000 polynomial.py:25(__init__)
      301    0.001    0.000    0.001    0.000 {built-in method builtins.isinstance}
       25    0.000    0.000    0.001    0.000 polynomial.py:8(strip_trailing_zeros)
        4    0.000    0.000    0.001    0.000 wb_interpolate.py:94(<listcomp>)
       28    0.000    0.000    0.001    0.000 field.py:196(__invert__)
        4    0.000    0.000    0.001    0.000 polynomial.py:38(__call__)
  118/110    0.000    0.000    0.000    0.000 {built-in method builtins.len}
       20    0.000    0.000    0.000    0.000 field.py:188(__pow__)
        4    0.000    0.000    0.000    0.000 wb_interpolate.py:93(<listcomp>)
       28    0.000    0.000    0.000    0.000 field.py:103(__call__)
        5    0.000    0.000    0.000    0.000 linearsolver.py:63(isPivotColumn)


Test n = 22, t = 10, field = 73
         72277 function calls (72233 primitive calls) in 0.508 seconds

   Ordered by: cumulative time, internal time
   List reduced from 68 to 34 due to restriction <0.5>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.508    0.508 robust_reconstruction.py:15(attempt_reconstruct)
        1    0.000    0.000    0.492    0.492 wb_interpolate.py:129(decode)
        1    0.000    0.000    0.449    0.449 wb_interpolate.py:79(solveSystem)
        1    0.000    0.000    0.391    0.391 linearsolver.py:86(someSolution)
        1    0.005    0.005    0.378    0.378 linearsolver.py:5(rref)
      363    0.064    0.000    0.350    0.001 linearsolver.py:37(<listcomp>)
    10607    0.112    0.000    0.184    0.000 field.py:175(__mul__)
     8322    0.086    0.000    0.142    0.000 field.py:145(__sub__)
    22630    0.082    0.000    0.082    0.000 field.py:124(__init__)
        2    0.001    0.000    0.079    0.039 polynomial.py:161(__divmod__)
    21006    0.065    0.000    0.065    0.000 {built-in method builtins.isinstance}
       22    0.007    0.000    0.041    0.002 polynomial.py:145(__mul__)
     2077    0.022    0.000    0.036    0.000 field.py:129(__add__)
       44    0.001    0.000    0.027    0.001 polynomial.py:140(__add__)
      503    0.006    0.000    0.026    0.000 {built-in method builtins.sum}
       44    0.002    0.000    0.024    0.001 polynomial.py:141(<listcomp>)
        1    0.000    0.000    0.021    0.021 wb_interpolate.py:98(<listcomp>)
       22    0.000    0.000    0.021    0.001 wb_interpolate.py:91(row)
       17    0.002    0.000    0.021    0.001 linearsolver.py:31(<listcomp>)
      413    0.005    0.000    0.020    0.000 field.py:221(__div__)
       22    0.000    0.000    0.019    0.001 polynomial.py:134(__sub__)
       22    0.003    0.000    0.016    0.001 wb_interpolate.py:94(<listcomp>)
       22    0.003    0.000    0.014    0.001 polynomial.py:38(__call__)
      413    0.005    0.000    0.008    0.000 field.py:196(__invert__)
      484    0.005    0.000    0.008    0.000 field.py:188(__pow__)
       22    0.001    0.000    0.005    0.000 wb_interpolate.py:93(<listcomp>)
       22    0.003    0.000    0.005    0.000 linearsolver.py:63(isPivotColumn)
       22    0.000    0.000    0.005    0.000 polynomial.py:136(__neg__)
      440    0.003    0.000    0.005    0.000 field.py:103(__call__)
      771    0.004    0.000    0.004    0.000 field.py:295(__ne__)
      115    0.001    0.000    0.004    0.000 polynomial.py:25(__init__)
       22    0.001    0.000    0.003    0.000 polynomial.py:149(<listcomp>)
       22    0.001    0.000    0.003    0.000 polynomial.py:136(<listcomp>)
      115    0.002    0.000    0.003    0.000 polynomial.py:8(strip_trailing_zeros)


Test n = 50, t = 16, field = 73
         598361 function calls (598293 primitive calls) in 4.098 seconds

   Ordered by: cumulative time, internal time
   List reduced from 68 to 34 due to restriction <0.5>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.001    0.001    4.098    4.098 robust_reconstruction.py:15(attempt_reconstruct)
        1    0.000    0.000    4.046    4.046 wb_interpolate.py:129(decode)
        1    0.000    0.000    3.883    3.883 wb_interpolate.py:79(solveSystem)
        1    0.001    0.001    3.592    3.592 linearsolver.py:86(someSolution)
        1    0.022    0.022    3.527    3.527 linearsolver.py:5(rref)
     1638    0.601    0.000    3.408    0.002 linearsolver.py:37(<listcomp>)
    95252    0.980    0.000    1.607    0.000 field.py:175(__mul__)
    83472    0.849    0.000    1.398    0.000 field.py:145(__sub__)
   194653    0.686    0.000    0.686    0.000 field.py:124(__init__)
   188144    0.577    0.000    0.577    0.000 {built-in method builtins.isinstance}
        2    0.001    0.001    0.343    0.171 polynomial.py:161(__divmod__)
       34    0.040    0.001    0.232    0.007 polynomial.py:145(__mul__)
     9420    0.097    0.000    0.159    0.000 field.py:129(__add__)
        1    0.000    0.000    0.109    0.109 wb_interpolate.py:98(<listcomp>)
       50    0.001    0.000    0.109    0.002 wb_interpolate.py:91(row)
     1464    0.019    0.000    0.090    0.000 {built-in method builtins.sum}
       34    0.006    0.000    0.085    0.003 linearsolver.py:31(<listcomp>)
     1768    0.018    0.000    0.081    0.000 field.py:221(__div__)
       68    0.002    0.000    0.076    0.001 polynomial.py:140(__add__)
       50    0.012    0.000    0.073    0.001 wb_interpolate.py:94(<listcomp>)
       34    0.000    0.000    0.070    0.002 polynomial.py:134(__sub__)
       68    0.005    0.000    0.070    0.001 polynomial.py:141(<listcomp>)
       50    0.009    0.000    0.050    0.001 polynomial.py:38(__call__)
     2500    0.025    0.000    0.044    0.000 field.py:188(__pow__)
       50    0.006    0.000    0.035    0.001 wb_interpolate.py:93(<listcomp>)
     1768    0.018    0.000    0.033    0.000 field.py:196(__invert__)
       50    0.013    0.000    0.026    0.001 linearsolver.py:63(isPivotColumn)
       34    0.001    0.000    0.024    0.001 polynomial.py:136(__neg__)
       34    0.003    0.000    0.022    0.001 polynomial.py:136(<listcomp>)
      850    0.016    0.000    0.019    0.000 field.py:192(__neg__)
     3109    0.017    0.000    0.017    0.000 field.py:295(__ne__)
     1290    0.009    0.000    0.013    0.000 field.py:103(__call__)
        1    0.000    0.000    0.013    0.013 linearsolver.py:49(noSolution)
       19    0.003    0.000    0.013    0.001 {built-in method builtins.all}


